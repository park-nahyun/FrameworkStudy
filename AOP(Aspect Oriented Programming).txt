■■■ AOP(Aspect Oriented Programming) ■■■

※ 공통의 관심 사항을 적용해서 발생하는 의존 관계의 복잡성과
   코드 중복을 해소해 주는 프로그래밍 기법.

○ AOP 개념
   주 업무를 실행할 때 보조적인 업무(주 업무 실행 시칸 체크, 로그 기록 등)기
   진행되어야 한다.
   만약, 주 업무가 여러개이고, 동일한 보조 업무의 수행이 진행되어야 한다면
   보조 업무 부분은 중복된 코드가 될 수 밖에 없다.
   이런 중복 요소를 제거하고 보조 업무를 보다 독립적인 방법으로 실행할 수 있도록
   구성하는 것을 AOP 기법이라고 한다.


○ AOP 관련 주요 용어
   - 보조 업무(cross-cutting concern)
     주 업무 실행 시 발생하는 보조적인 업무.
     주 업무와 분리 및 결합이 쉽게 이루어질 수 있도록 만들어야 한다.
   - 주 업무(core concern)
     핵심적인 기능을 수행하는 부분.
     사용자의 요청에 대한 기본적인 수행 및 결과 반환을 해야 한다.
   - Advice
     언제 어떤 공통 관심 기능(보조 업무, cross-cutting concern)을 적용할지
     결정하는 방법.
     Before Advice, After Advice, Around Advice 등이 있다.
     ·Before Advice
       보조 업무가 주 업무 실행 전에 수행되는 경우
     ·After Advice
       보조 업무가 주 업무 실행 후에 수행되는 경우
     ·Around Advice
       보조 업무가 주 업무 실행 전과 후에 수행되는 경우
   - proxy
     주 업무를 실행하는 객체와 동일한 모양을 가진 가짜 객체.
     사용자가 주 업무를 실행하는 객체를 찾아가는 것이 아니라,
     proxy를 찾아가도록 지정하게 된다.
     proxy 내부에서 보조 업무를 실행한 후, 주 업무를 호출하도록 하면
     외부에서 볼 때 주 업무를 실행하는 것과 같은 결과가 나오도록 할 수 있다.
   - joinpoint
     proxy 내부에서 주 업무를 호출하는 경우에 특정 지점에만 호출되도록 할 수 있다.
   - weaving
     advice 를 주 업무에 적용하는 과정을 부르는 명칭.
   - aspect
     여러 주 업무 객체에 공통으로 적용되는 공통 관심 사항(보조 업무)을
     aspect 라고 한다.

○ AOP 진행 순서
  
   사용자 			프록시			보조 업무			주 업무
   (Client)			(proxy)			(cross-cutting concern)		(core concern)

      ○----------------------------------------------------------------------------------->○

      ●------------①------------>●
				
				   ●----------②----------->●

				   ●-----------------------------③----------------------->●

				   ●<----------------------------④----------------------->●

				   ●----------⑤------------>●

      ○<----------------------------------------------------------------------------------○

      ●<------------ⓔ------------●

      ① 사용자는 proxy 객체에 접근한다.
         사용자 입장에서는 proxy 객체가 주 업무(core concern) 객체와 동일하게 생각한다.
 
      ② proxy 객체 내부에서 보조 업무(cross-cutting concern)를 진행하게 된다.
         주 업무 실행 전에 실행되는 보조 업무는
         Before Advice, Around Advice 가 있다.
 
      ③ proxy 객체 내부에서 주 업무(core concern)를 호출한다.
         주 업무가 진행된다.

      ④ 주 업무가 결과값을 리턴한다.
   
      ⑤ proxy 객체 내부에서 보조 업무(cross-cutting concern)를 진행하게 된다.
         주 업무 실행 후에 실행되는 보조 업무는
         After Advice, Around Advice 가 있다.

      ⑥ 사용자에게 결과값을 리턴한다.


--------------------------------------------------------------------------------------------------------
■■■ AOP 개념 실습 01 (AOP 기법을 적용하기 전) ■■■


○ 실습 성격 및 주요 사항
   1. 콘솔 프로젝트
   2. 기본적인 산술 연산 처리
   3. AOP 기법을 사용하지 않은 상태로 보조업무(시간 측정, 로그 기록)를
      적용시켜보는 실습을 진행한다. 
   4. Java Project 생성 → SpringPrj05
   5. 로그 및 스톱워치 사용을 위해 jar 파일을 등록한다.


○ 등록해야 할 jar 파일
   - 경로1 : C:\s-f-3.0.2.-with-docs\dist
     · 파일1 :org.springframework.core-3.0.2.RELEASE.jar
   - 경로2 : C:\s-f-3.0.2.RELEASE-dependencies\org.apache.commons\com.springsource.org.apache.commons.logging\1.1.1
     · 파일2: com.springsource.org.apache.commons.logging-1.1.1.jar

○ 물리적 파일 구성
   1. Calculator.java		→ 인터페이스
   2. CalculatorImpl.java	→ 클래스. 주 업무, 보조 업무 적용.
   3. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스.

 


--------------------------------------------------------------------------------------------------------
■■■ AOP 개념 실습 02 (AOP 기법 적용) ■■■ (Spring AOP가 아닌 그냥 AOP)


○ 실습 성격 및 주요 사항
   1. 콘솔 프로젝트
   2. 기본적인 산술 연산 처리
   3. Java Project 생성 → SpringPrj06
   4. 로그 및 스톱워치 사용을 위해 jar 파일을 등록한다.


○ 등록해야 할 jar 파일
   - 경로1 : C:\s-f-3.0.2.-with-docs\dist
     · 파일1 :org.springframework.core-3.0.2.RELEASE.jar
   - 경로2 : C:\s-f-3.0.2.RELEASE-dependencies\org.apache.commons\com.springsource.org.apache.commons.logging\1.1.1
     · 파일2: com.springsource.org.apache.commons.logging-1.1.1.jar

○ 물리적 파일 구성
   1. Calculator.java		→ 인터페이스(기존 소스코드 그대로 활용)
   2. CalculatorProxy.java      → 프록시 클래스.
 				   보조 업무 적용 및 주 업무 호출 과정.
   2. CalculatorImpl.java	→ 클래스. 주 업무, 보조 업무 적용.
   3. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스.



--------------------------------------------------------------------------------------------------------
■■■ AOP 개념 실습 03 (Spring AOP 기법 적용) ■■■ 


○ 실습 성격 및 주요 사항
   1. 콘솔 프로젝트
   2. 기본적인 산술 연산 처리
   3. Java Project 생성 → SpringPrj07
   4. 로그 및 스톱워치 사용을 위해 jar 파일을 등록한다.
   5. 추가로 스프링 AOP 기법을 적용하기 위한 jar 파일을 등록한다.

○ 로그 및 스톱워치 사용을 위해 등록해야 할 jar 파일
   + 스프링 AOP 기법을 적용하기 위한 jar 파일
      - 경로1 : C:\s-f-3.0.2.-with-docs\dist
        ·파일1 : org.springframework.asm-3.0.2.RELEASE.jar
        ·파일2 : org.springframework.beans-3.0.2.RELEASE.jar
        ·파일3 : org.springframework.context-3.0.2.RELEASE.jar
        ·파일4 : org.springframework.core-3.0.2.RELEASE.jar
        ·파일5 : org.springframework.expression-3.0.2.RELEASE.jar
	·파일6 : org.springframework.aop-3.0.2.RELEASE.jar

   - 경로2 : C:\s-f-3.0.2.RELEASE-dependencies\org.apache.commons\com.springsource.org.apache.commons.logging\1.1.1
     · 파일7: com.springsource.org.apache.commons.logging-1.1.1.jar

   - 경로3 : C:\s-f-3.0.2.RELEASE-dependencies\org.aopalliance\com.springsource.org.aopalliance\1.0.0
      ·파일8 : com.springsource.org.aopalliance-1.0.0.jar


○ 물리적 파일 구성
   1. Calculator.java		→ 인터페이스(기존 소스코드 그대로 활용)
   2. CalculatorAspect.java     → 보조 업무 클래스.
 				   보조 업무 적용 및 주 업무 호출 과정.
   3. CalculatorImpl.java	→ 클래스. 주 업무, 보조 업무 적용.(기존 소스코드 그대로 사용)
   4. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스.
   5. config.xml		→ 스프링 환경 설정 파일.
			           객체 생성 및 DI 설정




--------------------------------------------------------------------------------------------------------
■■■ AOP 개념 실습 04 (Spring AOP 기법 적용) ■■■ 



※ AOP Advice
  
   Advice - 언제 어떤 공통 관심 사항(보조 업무, cross-cutting concern)을
            적용할지 결정하는 방법.
            Before Advice, After Advice, Around Advice 등이 있다.

   Before Advice - 보조 업무가 주 업무 실행전에 수행되는 경우.
   After Advice - 보조 업무가 주 업무 실행 후에 수행되는 경우.
   Around Advice - 보조 업무가 주 업무 실행 전과 후에 수행되는 경우.


○ 실습 성격 및 주요 사항
   1. 콘솔 프로젝트
   2. 기본적인 산술 연산 처리
   3. Java Project 생성 → SpringPrj08
   4. 로그 및 스톱워치 사용을 위해 jar 파일을 등록한다.
   5. 추가로 스프링 AOP 기법을 적용하기 위한 jar 파일을 등록한다.

○ 로그 및 스톱워치 사용을 위해 등록해야 할 jar 파일
   + 스프링 AOP 기법을 적용하기 위한 jar 파일
      - 경로1 : C:\s-f-3.0.2.-with-docs\dist
        ·파일1 : org.springframework.asm-3.0.2.RELEASE.jar
        ·파일2 : org.springframework.beans-3.0.2.RELEASE.jar
        ·파일3 : org.springframework.context-3.0.2.RELEASE.jar
        ·파일4 : org.springframework.core-3.0.2.RELEASE.jar
        ·파일5 : org.springframework.expression-3.0.2.RELEASE.jar
	·파일6 : org.springframework.aop-3.0.2.RELEASE.jar

   - 경로2 : C:\s-f-3.0.2.RELEASE-dependencies\org.apache.commons\com.springsource.org.apache.commons.logging\1.1.1
     · 파일7: com.springsource.org.apache.commons.logging-1.1.1.jar

   - 경로3 : C:\s-f-3.0.2.RELEASE-dependencies\org.aopalliance\com.springsource.org.aopalliance\1.0.0
      ·파일8 : com.springsource.org.aopalliance-1.0.0.jar


○ 물리적 파일 구성
   1. Calculator.java		→ 인터페이스(기존 소스코드 그대로 활용)
   2. CalculatorAspect.java     → 보조 업무 클래스.
 				   보조 업무 적용 및 주 업무 호출 과정.
   3. CalculatorImpl.java	→ 클래스. 주 업무, 보조 업무 적용.(기존 소스코드 그대로 사용)
   4. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스.
   5. config.xml		→ 스프링 환경 설정 파일.
			           객체 생성 및 DI 설정.
   6. CalculatorBeforeAdvice.java → 추가. Before Advice.



--------------------------------------------------------------------------------------------------------
■■■ AOP 개념 실습 05 (Spring AOP 기법 적용) ■■■ 



※ AOP Advice
  
   Advice - 언제 어떤 공통 관심 사항(보조 업무, cross-cutting concern)을
            적용할지 결정하는 방법.
            Before Advice, After Advice, Around Advice 등이 있다.

   Before Advice - 보조 업무가 주 업무 실행전에 수행되는 경우.
   After Advice - 보조 업무가 주 업무 실행 후에 수행되는 경우.
   Around Advice - 보조 업무가 주 업무 실행 전과 후에 수행되는 경우.


○ 실습 성격 및 주요 사항
   1. 콘솔 프로젝트
   2. 기본적인 산술 연산 처리
   3. Java Project 생성 → SpringPrj09
   4. 로그 및 스톱워치 사용을 위해 jar 파일을 등록한다.
   5. 추가로 스프링 AOP 기법을 적용하기 위한 jar 파일을 등록한다.

○ 로그 및 스톱워치 사용을 위해 등록해야 할 jar 파일
   + 스프링 AOP 기법을 적용하기 위한 jar 파일
      - 경로1 : C:\s-f-3.0.2.-with-docs\dist
        ·파일1 : org.springframework.asm-3.0.2.RELEASE.jar
        ·파일2 : org.springframework.beans-3.0.2.RELEASE.jar
        ·파일3 : org.springframework.context-3.0.2.RELEASE.jar
        ·파일4 : org.springframework.core-3.0.2.RELEASE.jar
        ·파일5 : org.springframework.expression-3.0.2.RELEASE.jar
	·파일6 : org.springframework.aop-3.0.2.RELEASE.jar

   - 경로2 : C:\s-f-3.0.2.RELEASE-dependencies\org.apache.commons\com.springsource.org.apache.commons.logging\1.1.1
     · 파일7: com.springsource.org.apache.commons.logging-1.1.1.jar

   - 경로3 : C:\s-f-3.0.2.RELEASE-dependencies\org.aopalliance\com.springsource.org.aopalliance\1.0.0
      ·파일8 : com.springsource.org.aopalliance-1.0.0.jar


○ 물리적 파일 구성
   1. Calculator.java		→ 인터페이스(기존 소스코드 그대로 활용)
   2. CalculatorAspect.java     → 보조 업무 클래스.
 				   보조 업무 적용 및 주 업무 호출 과정.
   3. CalculatorImpl.java	→ 클래스. 주 업무, 보조 업무 적용.(기존 소스코드 그대로 사용)
   4. Main.java			→ 클래스. main() 메소드가 포함된 테스트 클래스.
   5. config.xml		→ 스프링 환경 설정 파일.
			           객체 생성 및 DI 설정.
   6. CalculatorBeforeAdvice.java → 추가. Before Advice.
   7. CalculatorAfterThrowing.java → 추가. After Throwing Advice.(예외처리 변주를 줌)
 








